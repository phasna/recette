/**
 * Test de correction du probl√®me de bouton double
 * V√©rifie que le bouton ouvre directement le formulaire
 */

const axios = require("axios");

const BASE_URL = "http://localhost:3000/api";
const FRONTEND_URL = "http://localhost:5001";

/**
 * Test de l'API backend
 */
async function testBackendAPI() {
  console.log("üîß Test de l'API backend...\n");

  try {
    const response = await axios.get(`${BASE_URL}/test`);

    if (response.status === 200) {
      console.log("‚úÖ Backend API: FONCTIONNEL");
      return true;
    } else {
      console.log("‚ùå Backend API: ERREUR");
      return false;
    }
  } catch (error) {
    console.log("‚ùå Backend API: INACCESSIBLE");
    return false;
  }
}

/**
 * Test de l'interface frontend
 */
async function testFrontendInterface() {
  console.log("\nüé® Test de l'interface frontend...\n");

  try {
    const response = await axios.get(FRONTEND_URL);

    if (response.status === 200) {
      console.log("‚úÖ Frontend: ACCESSIBLE");
      return true;
    } else {
      console.log("‚ùå Frontend: ERREUR");
      return false;
    }
  } catch (error) {
    console.log("‚ùå Frontend: INACCESSIBLE");
    return false;
  }
}

/**
 * Instructions pour tester le bouton corrig√©
 */
function showButtonTestInstructions() {
  console.log("\nüéØ INSTRUCTIONS POUR TESTER LE BOUTON CORRIG√â");
  console.log("=" * 60);

  console.log("\nüì± √âtapes √† suivre :");
  console.log("1. Ouvrez votre navigateur");
  console.log(`2. Allez sur ${FRONTEND_URL}`);
  console.log("3. Cherchez le bouton 'Ajouter une Recette'");
  console.log("4. Cliquez UNE SEULE FOIS sur le bouton");
  console.log("5. Le formulaire doit s'ouvrir DIRECTEMENT");

  console.log("\n‚úÖ Comportement attendu (CORRIG√â) :");
  console.log(
    "‚Ä¢ Clic sur 'Ajouter une Recette' ‚Üí Formulaire s'ouvre imm√©diatement"
  );
  console.log("‚Ä¢ PAS de bouton interm√©diaire");
  console.log("‚Ä¢ Formulaire modal avec tous les champs");
  console.log("‚Ä¢ Boutons 'Sauvegarder' et 'Annuler' dans le formulaire");

  console.log("\n‚ùå Ancien comportement (PROBL√âMATIQUE) :");
  console.log("‚Ä¢ Clic sur 'Ajouter une Recette' ‚Üí Autre bouton appara√Æt");
  console.log("‚Ä¢ Clic sur le deuxi√®me bouton ‚Üí Formulaire s'ouvre");
  console.log("‚Ä¢ Double clic n√©cessaire");

  console.log("\nüîç O√π chercher le bouton :");
  console.log("‚Ä¢ En haut de la page (bouton bleu avec ‚ûï)");
  console.log("‚Ä¢ Au centre si aucune recette (bouton vert avec ‚ûï)");
  console.log("‚Ä¢ Le bouton doit √™tre visible et cliquable");

  console.log("\nüìù Test du formulaire :");
  console.log("1. Remplissez le titre (obligatoire)");
  console.log("2. Remplissez les ingr√©dients (obligatoire)");
  console.log("3. Remplissez les instructions (obligatoire)");
  console.log("4. Cliquez sur 'Sauvegarder'");
  console.log("5. V√©rifiez que la recette appara√Æt dans la liste");

  console.log("\n‚ùå Si le probl√®me persiste :");
  console.log("‚Ä¢ V√©rifiez la console du navigateur (F12)");
  console.log("‚Ä¢ Red√©marrez l'application");
  console.log("‚Ä¢ V√©rifiez que les modifications sont appliqu√©es");
}

/**
 * Test complet de correction
 */
async function runButtonFixTest() {
  console.log("üîß Test de correction du probl√®me de bouton double\n");
  console.log("=" * 60);

  try {
    // Test du backend
    const backendOk = await testBackendAPI();

    // Test du frontend
    const frontendOk = await testFrontendInterface();

    console.log("\n" + "=" * 60);
    console.log("üéâ R√âSULTATS DU TEST DE CORRECTION");
    console.log("=" * 60);

    if (backendOk && frontendOk) {
      console.log("‚úÖ Backend: OP√âRATIONNEL");
      console.log("‚úÖ Frontend: ACCESSIBLE");

      console.log("\nüéØ PROBL√àME DE BOUTON DOUBLE CORRIG√â !");
      console.log("\nüì± Le bouton fonctionne maintenant correctement :");
      console.log("   ‚Ä¢ Un seul clic pour ouvrir le formulaire");
      console.log("   ‚Ä¢ Plus de bouton interm√©diaire");
      console.log("   ‚Ä¢ Formulaire s'ouvre directement");
      console.log("   ‚Ä¢ Interface plus intuitive");

      showButtonTestInstructions();
    } else {
      console.log("‚ùå PROBL√àME D√âTECT√â");
      if (!backendOk) {
        console.log("   ‚Ä¢ Backend non accessible");
      }
      if (!frontendOk) {
        console.log("   ‚Ä¢ Frontend non accessible");
      }

      console.log("\nüîß Solutions :");
      console.log("   1. Red√©marrez l'application : node start-clean.js");
      console.log("   2. V√©rifiez les ports 3000 et 5001");
      console.log("   3. V√©rifiez la console pour les erreurs");
    }
  } catch (error) {
    console.log("\n‚ùå ERREUR LORS DES TESTS");
    console.log(`   ${error.message}`);
  }
}

// Ex√©cuter les tests
runButtonFixTest();
