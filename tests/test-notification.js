/**
 * Test des notifications anim√©es
 * V√©rifie que les messages de confirmation anim√©s fonctionnent
 */

const axios = require("axios");

const BASE_URL = "http://localhost:3000/api";
const FRONTEND_URL = "http://localhost:5001";

/**
 * Test de l'API backend
 */
async function testBackendAPI() {
  console.log("üîß Test de l'API backend...\n");

  try {
    const response = await axios.get(`${BASE_URL}/test`);

    if (response.status === 200) {
      console.log("‚úÖ Backend API: FONCTIONNEL");
      return true;
    } else {
      console.log("‚ùå Backend API: ERREUR");
      return false;
    }
  } catch (error) {
    console.log("‚ùå Backend API: INACCESSIBLE");
    return false;
  }
}

/**
 * Test de l'interface frontend
 */
async function testFrontendInterface() {
  console.log("\nüé® Test de l'interface frontend...\n");

  try {
    const response = await axios.get(FRONTEND_URL);

    if (response.status === 200) {
      console.log("‚úÖ Frontend: ACCESSIBLE");
      return true;
    } else {
      console.log("‚ùå Frontend: ERREUR");
      return false;
    }
  } catch (error) {
    console.log("‚ùå Frontend: INACCESSIBLE");
    return false;
  }
}

/**
 * Test d'ajout d'une recette avec notification
 */
async function testRecipeWithNotification() {
  console.log("\nüìù Test d'ajout de recette avec notification...\n");

  try {
    const testRecipe = {
      title: "Test Notification Anim√©e",
      description: "Recette pour tester les notifications anim√©es",
      ingredients:
        "1 ingr√©dient de test\n2 ingr√©dients de test\n3 ingr√©dients de test",
      instructions:
        "1. Premi√®re √©tape de test\n2. Deuxi√®me √©tape de test\n3. Troisi√®me √©tape de test",
      prep_time: 10,
      cook_time: 15,
      servings: 3,
      difficulty: "Facile",
    };

    console.log("üìù Tentative d'ajout de recette...");
    const response = await axios.post(`${BASE_URL}/recipes`, testRecipe);

    if (response.status === 201) {
      console.log("‚úÖ Recette cr√©√©e avec succ√®s !");
      console.log(`   ID: ${response.data.id}`);
      console.log(`   Titre: ${response.data.title}`);
      return true;
    } else {
      console.log("‚ùå Erreur lors de la cr√©ation");
      return false;
    }
  } catch (error) {
    console.log("‚ùå Erreur lors du test:");
    if (error.response) {
      console.log(`   Status: ${error.response.status}`);
      console.log(
        `   Message: ${error.response.data.message || error.response.data}`
      );
    } else {
      console.log(`   Erreur: ${error.message}`);
    }
    return false;
  }
}

/**
 * Instructions pour tester les notifications anim√©es
 */
function showNotificationTestInstructions() {
  console.log("\nüéØ INSTRUCTIONS POUR TESTER LES NOTIFICATIONS ANIM√âES");
  console.log("=" * 70);

  console.log("\nüì± √âtapes √† suivre :");
  console.log("1. Ouvrez votre navigateur");
  console.log(`2. Allez sur ${FRONTEND_URL}`);
  console.log("3. Cliquez sur 'Ajouter une Recette'");
  console.log("4. Remplissez le formulaire");
  console.log("5. Cliquez sur 'Sauvegarder'");
  console.log("6. Observez la notification anim√©e !");

  console.log("\n‚ú® Fonctionnalit√©s des notifications :");
  console.log("‚Ä¢ Animation d'entr√©e depuis la droite");
  console.log("‚Ä¢ Ic√¥ne de succ√®s ‚úÖ avec couleur verte");
  console.log("‚Ä¢ Message personnalis√©");
  console.log("‚Ä¢ Barre de progression anim√©e");
  console.log("‚Ä¢ Auto-fermeture apr√®s 3 secondes");
  console.log("‚Ä¢ Animation de sortie fluide");
  console.log("‚Ä¢ Bouton de fermeture manuel");

  console.log("\nüé® Types de notifications disponibles :");
  console.log("‚Ä¢ SUCC√àS : Notification verte avec ‚úÖ");
  console.log("‚Ä¢ ERREUR : Notification rouge avec ‚ùå");
  console.log("‚Ä¢ INFO : Notification bleue avec ‚ÑπÔ∏è");
  console.log("‚Ä¢ ATTENTION : Notification jaune avec ‚ö†Ô∏è");

  console.log("\nüîç O√π observer les notifications :");
  console.log("‚Ä¢ En haut √† droite de l'√©cran");
  console.log("‚Ä¢ Animation de glissement depuis la droite");
  console.log("‚Ä¢ Barre de progression qui se r√©duit");
  console.log("‚Ä¢ Disparition automatique apr√®s 3 secondes");

  console.log("\n‚úÖ Test de succ√®s :");
  console.log("‚Ä¢ Ajoutez une recette valide");
  console.log("‚Ä¢ Notification verte 'Recette ajout√©e avec succ√®s !'");
  console.log("‚Ä¢ Animation fluide et professionnelle");

  console.log("\n‚ùå Test d'erreur :");
  console.log("‚Ä¢ Essayez d'ajouter une recette sans titre");
  console.log("‚Ä¢ Notification rouge d'erreur");
  console.log("‚Ä¢ Message d'erreur explicite");

  console.log("\nüéâ R√©sultat attendu :");
  console.log("‚Ä¢ Notifications modernes et anim√©es");
  console.log("‚Ä¢ Plus d'alertes JavaScript basiques");
  console.log("‚Ä¢ Exp√©rience utilisateur am√©lior√©e");
  console.log("‚Ä¢ Interface plus professionnelle");
}

/**
 * Test complet des notifications
 */
async function runNotificationTest() {
  console.log("üéâ Test des notifications anim√©es\n");
  console.log("=" * 60);

  try {
    // Test du backend
    const backendOk = await testBackendAPI();

    // Test du frontend
    const frontendOk = await testFrontendInterface();

    // Test d'ajout de recette
    const recipeOk = await testRecipeWithNotification();

    console.log("\n" + "=" * 60);
    console.log("üéâ R√âSULTATS DU TEST DES NOTIFICATIONS");
    console.log("=" * 60);

    if (backendOk && frontendOk && recipeOk) {
      console.log("‚úÖ Backend: OP√âRATIONNEL");
      console.log("‚úÖ Frontend: ACCESSIBLE");
      console.log("‚úÖ API: FONCTIONNELLE");

      console.log("\nüéØ NOTIFICATIONS ANIM√âES OP√âRATIONNELLES !");
      console.log("\nüì± Fonctionnalit√©s disponibles :");
      console.log("   ‚Ä¢ Messages de confirmation anim√©s");
      console.log("   ‚Ä¢ Notifications de succ√®s et d'erreur");
      console.log("   ‚Ä¢ Animations fluides et modernes");
      console.log("   ‚Ä¢ Auto-fermeture avec barre de progression");
      console.log("   ‚Ä¢ Interface utilisateur am√©lior√©e");

      showNotificationTestInstructions();
    } else {
      console.log("‚ùå PROBL√àME D√âTECT√â");
      if (!backendOk) {
        console.log("   ‚Ä¢ Backend non accessible");
      }
      if (!frontendOk) {
        console.log("   ‚Ä¢ Frontend non accessible");
      }
      if (!recipeOk) {
        console.log("   ‚Ä¢ Erreur lors de l'ajout de recette");
      }

      console.log("\nüîß Solutions :");
      console.log("   1. Red√©marrez l'application : node start-clean.js");
      console.log("   2. V√©rifiez les ports 3000 et 5001");
      console.log("   3. V√©rifiez la console pour les erreurs");
    }
  } catch (error) {
    console.log("\n‚ùå ERREUR LORS DES TESTS");
    console.log(`   ${error.message}`);
  }
}

// Ex√©cuter les tests
runNotificationTest();
