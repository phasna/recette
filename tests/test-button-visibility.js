/**
 * Test de visibilit√© du bouton d'ajout de recettes
 * V√©rifie que le bouton s'affiche correctement dans l'interface
 */

const axios = require("axios");

const BASE_URL = "http://localhost:3000/api";
const FRONTEND_URL = "http://localhost:5001";

/**
 * Test de l'API backend
 */
async function testBackendAPI() {
  console.log("üîß Test de l'API backend...\n");

  try {
    const response = await axios.get(`${BASE_URL}/test`);
    
    if (response.status === 200) {
      console.log("‚úÖ Backend API: FONCTIONNEL");
      console.log(`   Message: ${response.data.message}`);
      return true;
    } else {
      console.log("‚ùå Backend API: ERREUR");
      return false;
    }
  } catch (error) {
    console.log("‚ùå Backend API: INACCESSIBLE");
    console.log(`   Erreur: ${error.message}`);
    return false;
  }
}

/**
 * Test de l'interface frontend
 */
async function testFrontendInterface() {
  console.log("\nüé® Test de l'interface frontend...\n");

  try {
    const response = await axios.get(FRONTEND_URL);
    
    if (response.status === 200) {
      console.log("‚úÖ Frontend: ACCESSIBLE");
      console.log(`   URL: ${FRONTEND_URL}`);
      return true;
    } else {
      console.log("‚ùå Frontend: ERREUR");
      console.log(`   Status: ${response.status}`);
      return false;
    }
  } catch (error) {
    console.log("‚ùå Frontend: INACCESSIBLE");
    console.log(`   Erreur: ${error.message}`);
    return false;
  }
}

/**
 * Test d'ajout d'une recette
 */
async function testAddRecipe() {
  console.log("\nüìù Test d'ajout d'une recette...\n");

  try {
    const testRecipe = {
      title: "Test Bouton Visible",
      description: "Recette de test pour v√©rifier le bouton",
      ingredients: "1 ingr√©dient de test\n2 ingr√©dients de test",
      instructions: "1. Premi√®re √©tape de test\n2. Deuxi√®me √©tape de test",
      prep_time: 5,
      cook_time: 10,
      servings: 2,
      difficulty: "Facile"
    };

    const response = await axios.post(`${BASE_URL}/recipes`, testRecipe);
    
    if (response.status === 201) {
      console.log("‚úÖ Ajout de recette: R√âUSSI");
      console.log(`   ID: ${response.data.id}`);
      console.log(`   Titre: ${response.data.title}`);
      return response.data.id;
    } else {
      console.log("‚ùå Ajout de recette: √âCHEC");
      return null;
    }
  } catch (error) {
    console.log("‚ùå Ajout de recette: ERREUR");
    console.log(`   Erreur: ${error.response?.data?.message || error.message}`);
    return null;
  }
}

/**
 * Test de r√©cup√©ration des recettes
 */
async function testGetRecipes() {
  console.log("\nüìö Test de r√©cup√©ration des recettes...\n");

  try {
    const response = await axios.get(`${BASE_URL}/recipes`);
    
    if (response.status === 200) {
      console.log("‚úÖ R√©cup√©ration: R√âUSSIE");
      console.log(`   Nombre de recettes: ${response.data.length}`);
      
      if (response.data.length > 0) {
        const latestRecipe = response.data[response.data.length - 1];
        console.log(`   Derni√®re recette: ${latestRecipe.title}`);
      }
      return true;
    } else {
      console.log("‚ùå R√©cup√©ration: √âCHEC");
      return false;
    }
  } catch (error) {
    console.log("‚ùå R√©cup√©ration: ERREUR");
    console.log(`   Erreur: ${error.message}`);
    return false;
  }
}

/**
 * Instructions pour tester le bouton
 */
function showButtonTestInstructions() {
  console.log("\nüéØ INSTRUCTIONS POUR TESTER LE BOUTON");
  console.log("=" * 50);
  
  console.log("\nüì± √âtapes √† suivre :");
  console.log("1. Ouvrez votre navigateur");
  console.log(`2. Allez sur ${FRONTEND_URL}`);
  console.log("3. Cherchez le bouton 'Ajouter une Recette'");
  console.log("4. Le bouton doit √™tre visible dans :");
  console.log("   ‚Ä¢ La barre de recherche (bouton bleu avec ‚ûï)");
  console.log("   ‚Ä¢ La liste vide (bouton vert avec ‚ûï)");
  
  console.log("\nüîç O√π chercher le bouton :");
  console.log("‚Ä¢ En haut de la page, dans la barre de recherche");
  console.log("‚Ä¢ Au centre de la page si aucune recette n'existe");
  console.log("‚Ä¢ Le bouton doit √™tre bleu avec du texte blanc");
  console.log("‚Ä¢ Il doit avoir une ic√¥ne ‚ûï √† gauche");
  
  console.log("\n‚ùå Si le bouton n'appara√Æt pas :");
  console.log("‚Ä¢ V√©rifiez que l'application est d√©marr√©e");
  console.log("‚Ä¢ V√©rifiez la console du navigateur pour les erreurs");
  console.log("‚Ä¢ V√©rifiez que Tailwind CSS est charg√©");
  console.log("‚Ä¢ Red√©marrez l'application si n√©cessaire");
}

/**
 * Test complet
 */
async function runButtonVisibilityTest() {
  console.log("üöÄ Test de visibilit√© du bouton d'ajout de recettes\n");
  console.log("=" * 60);

  try {
    // Test du backend
    const backendOk = await testBackendAPI();
    
    // Test du frontend
    const frontendOk = await testFrontendInterface();
    
    // Test d'ajout de recette
    const recipeId = await testAddRecipe();
    
    // Test de r√©cup√©ration
    const getOk = await testGetRecipes();

    console.log("\n" + "=" * 60);
    console.log("üéâ R√âSULTATS DES TESTS");
    console.log("=" * 60);
    
    if (backendOk && frontendOk) {
      console.log("‚úÖ Backend: OP√âRATIONNEL");
      console.log("‚úÖ Frontend: ACCESSIBLE");
      console.log("‚úÖ API: FONCTIONNELLE");
      
      if (recipeId) {
        console.log("‚úÖ Ajout de recettes: FONCTIONNEL");
      }
      
      console.log("\nüéØ BOUTON D'AJOUT DE RECETTES DISPONIBLE !");
      console.log("\nüì± Pour voir le bouton :");
      console.log(`   Ouvrez ${FRONTEND_URL} dans votre navigateur`);
      console.log("   Le bouton 'Ajouter une Recette' doit √™tre visible");
      
      showButtonTestInstructions();
      
    } else {
      console.log("‚ùå PROBL√àME D√âTECT√â");
      if (!backendOk) {
        console.log("   ‚Ä¢ Backend non accessible");
        console.log("   ‚Ä¢ V√©rifiez que le serveur est d√©marr√©");
      }
      if (!frontendOk) {
        console.log("   ‚Ä¢ Frontend non accessible");
        console.log("   ‚Ä¢ V√©rifiez que React est d√©marr√©");
      }
      
      console.log("\nüîß Solutions :");
      console.log("   1. Red√©marrez l'application : node start-clean.js");
      console.log("   2. V√©rifiez les ports 3000 et 5001");
      console.log("   3. V√©rifiez la console pour les erreurs");
    }

  } catch (error) {
    console.log("\n‚ùå ERREUR LORS DES TESTS");
    console.log(`   ${error.message}`);
  }
}

// Ex√©cuter les tests
runButtonVisibilityTest();
