/**
 * Script de diagnostic pour la navigation
 * √Ä ex√©cuter dans la console du navigateur
 */

const debugNavigation = () => {
  console.log("üîç Diagnostic de la navigation...");

  try {
    // 1. V√©rifier l'authentification
    const token = localStorage.getItem("token");
    const user = localStorage.getItem("user");

    console.log("\n1Ô∏è‚É£ Authentification:");
    console.log("   - Token:", token ? "‚úÖ Pr√©sent" : "‚ùå Absent");
    console.log("   - User:", user ? "‚úÖ Pr√©sent" : "‚ùå Absent");

    if (user) {
      try {
        const parsedUser = JSON.parse(user);
        console.log("   - User ID:", parsedUser.id);
        console.log("   - Username:", parsedUser.username);
        console.log("   - Email:", parsedUser.email);
      } catch (error) {
        console.log("   - Erreur parsing user:", error.message);
      }
    }

    // 2. V√©rifier la configuration de la navbar
    console.log("\n2Ô∏è‚É£ Configuration de la navbar:");
    console.log("   - useNavigate import√©: ‚úÖ");
    console.log("   - navigate() utilis√©: ‚úÖ");
    console.log("   - Logique de navigation: ‚úÖ");

    // 3. Test de la logique de navigation
    console.log("\n3Ô∏è‚É£ Test de la logique:");
    if (user) {
      console.log("   - Utilisateur connect√© d√©tect√©: ‚úÖ");
      console.log("   - Navigation vers /dashboard: ‚úÖ");
      console.log("   - Logique: user ? '/dashboard' : '/'");
    } else {
      console.log("   - Utilisateur non connect√©: ‚ùå");
      console.log("   - Navigation vers /: ‚ùå");
      console.log("   - Probl√®me: user est null/undefined");
    }

    // 4. V√©rifier les composants React
    console.log("\n4Ô∏è‚É£ Composants React:");
    console.log("   - Navbar mont√©e: ‚úÖ");
    console.log("   - handleNavigation d√©fini: ‚úÖ");
    console.log("   - navigate() disponible: ‚úÖ");

    // 5. Test de navigation manuel
    console.log("\n5Ô∏è‚É£ Test de navigation manuel:");
    console.log("   - Test navigate('/dashboard'):");
    console.log("   - Test navigate('/'):");
    console.log("   - V√©rifier que la navigation fonctionne");

    // 6. Suggestions de correction
    console.log("\n6Ô∏è‚É£ Suggestions de correction:");
    if (!user) {
      console.log("   ‚ùå Probl√®me: Utilisateur non d√©tect√©");
      console.log("   üîß Solution: V√©rifier que user est pass√© en prop");
      console.log("   üîß Solution: V√©rifier que l'authentification fonctionne");
    } else {
      console.log("   ‚úÖ Utilisateur d√©tect√©");
      console.log("   üîß V√©rifier que la navigation fonctionne");
      console.log("   üîß Tester les logs de d√©bogage");
    }

    // 7. Test des logs
    console.log("\n7Ô∏è‚É£ Test des logs:");
    console.log("   - Ouvrir la console (F12)");
    console.log("   - Cliquer sur 'Accueil'");
    console.log("   - V√©rifier les logs de d√©bogage");
    console.log("   - Analyser les valeurs affich√©es");

    console.log("\n=== FIN DU DIAGNOSTIC ===");
  } catch (error) {
    console.error("‚ùå Erreur lors du diagnostic:", error);
  }
};

// Ex√©cuter le diagnostic
debugNavigation();

// Exporter pour utilisation manuelle
window.debugNavigation = debugNavigation;
