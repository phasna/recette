const axios = require("axios");

const API_BASE = "http://localhost:5000/api";

// Fonction de test
async function testAPI() {
  console.log("üß™ Test de l'API restructur√©e...\n");

  try {
    // Test 1: Route de test g√©n√©rale
    console.log("1Ô∏è‚É£ Test de la route g√©n√©rale...");
    const testResponse = await axios.get(`${API_BASE}/test`);
    console.log("‚úÖ Route test:", testResponse.data);

    // Test 2: R√©cup√©rer toutes les recettes
    console.log("\n2Ô∏è‚É£ Test de r√©cup√©ration des recettes...");
    const recipesResponse = await axios.get(`${API_BASE}/recipes`);
    console.log(
      "‚úÖ Recettes r√©cup√©r√©es:",
      recipesResponse.data.length,
      "recettes"
    );

    // Test 3: Cr√©er une nouvelle recette
    console.log("\n3Ô∏è‚É£ Test de cr√©ation d'une recette...");
    const newRecipe = {
      title: "Test API Restructur√©e",
      description: "Recette de test pour l'API restructur√©e",
      ingredients: "Ingr√©dient 1\nIngr√©dient 2\nIngr√©dient 3",
      instructions: "√âtape 1\n√âtape 2\n√âtape 3",
      prep_time: 15,
      cook_time: 30,
      servings: 4,
      difficulty: "Facile",
    };

    const createResponse = await axios.post(`${API_BASE}/recipes`, newRecipe);
    console.log("‚úÖ Recette cr√©√©e:", createResponse.data);
    const recipeId = createResponse.data.id;

    // Test 4: R√©cup√©rer la recette cr√©√©e
    console.log("\n4Ô∏è‚É£ Test de r√©cup√©ration d'une recette sp√©cifique...");
    const getRecipeResponse = await axios.get(
      `${API_BASE}/recipes/${recipeId}`
    );
    console.log("‚úÖ Recette r√©cup√©r√©e:", getRecipeResponse.data.title);

    // Test 5: Mettre √† jour la recette
    console.log("\n5Ô∏è‚É£ Test de mise √† jour d'une recette...");
    const updateData = {
      ...newRecipe,
      title: "Test API Restructur√©e - Modifi√©e",
      difficulty: "Moyen",
    };
    const updateResponse = await axios.put(
      `${API_BASE}/recipes/${recipeId}`,
      updateData
    );
    console.log("‚úÖ Recette mise √† jour:", updateResponse.data);

    // Test 6: Supprimer la recette
    console.log("\n6Ô∏è‚É£ Test de suppression d'une recette...");
    const deleteResponse = await axios.delete(
      `${API_BASE}/recipes/${recipeId}`
    );
    console.log("‚úÖ Recette supprim√©e:", deleteResponse.data);

    // Test 7: Test de validation (donn√©es invalides)
    console.log("\n7Ô∏è‚É£ Test de validation (donn√©es invalides)...");
    try {
      await axios.post(`${API_BASE}/recipes`, { title: "" });
    } catch (error) {
      console.log("‚úÖ Validation fonctionne:", error.response.data.error);
    }

    console.log("\nüéâ Tous les tests sont pass√©s avec succ√®s !");
    console.log("‚úÖ L'API restructur√©e fonctionne parfaitement");
  } catch (error) {
    console.error(
      "‚ùå Erreur lors du test:",
      error.response?.data || error.message
    );
  }
}

// Ex√©cuter les tests
testAPI();
