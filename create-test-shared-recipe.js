/**
 * Script pour cr√©er une recette de test partag√©e
 */
import fetch from "node-fetch";

const API_BASE = "http://localhost:3000/api";

async function createTestSharedRecipe() {
  console.log("üç≥ Cr√©ation d'une recette de test partag√©e...\n");

  try {
    // D'abord, r√©cup√©rer un token d'authentification (vous devrez vous connecter)
    console.log(
      "‚ö†Ô∏è  Vous devez d'abord vous connecter pour cr√©er une recette partag√©e"
    );
    console.log(
      "üí° Connectez-vous sur l'application et r√©cup√©rez votre token depuis le localStorage"
    );

    const token = "VOTRE_TOKEN_ICI"; // Remplacez par votre token

    if (token === "VOTRE_TOKEN_ICI") {
      console.log(
        "‚ùå Veuillez remplacer VOTRE_TOKEN_ICI par votre token d'authentification"
      );
      console.log("üìã Pour r√©cup√©rer votre token:");
      console.log("   1. Ouvrez l'application dans votre navigateur");
      console.log("   2. Connectez-vous");
      console.log("   3. Ouvrez les outils de d√©veloppement (F12)");
      console.log(
        "   4. Allez dans l'onglet Application/Storage > Local Storage"
      );
      console.log('   5. Copiez la valeur de "token"');
      return;
    }

    // Cr√©er une recette de test
    console.log("1Ô∏è‚É£ Cr√©ation de la recette de test...");
    const createResponse = await fetch(`${API_BASE}/recipes`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${token}`,
      },
      body: JSON.stringify({
        title: "Recette de Test Partag√©e",
        description:
          "Une d√©licieuse recette de test pour v√©rifier le syst√®me de partage",
        ingredients: "Ingr√©dient 1\nIngr√©dient 2\nIngr√©dient 3",
        instructions: "√âtape 1: Pr√©parer\n√âtape 2: Cuire\n√âtape 3: Servir",
        prep_time: 15,
        cook_time: 30,
        servings: 4,
        difficulty: "Facile",
      }),
    });

    if (createResponse.ok) {
      const createData = await createResponse.json();
      console.log("‚úÖ Recette cr√©√©e avec succ√®s, ID:", createData.id);

      // Maintenant, partager cette recette
      console.log("2Ô∏è‚É£ Partage de la recette...");
      const shareResponse = await fetch(
        `${API_BASE}/recipes/${createData.id}/share`,
        {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${token}`,
          },
          body: JSON.stringify({
            showOnVisitorPage: true,
            allowComments: true,
            showAuthorInfo: true,
            shareMessage:
              "Voici ma recette de test partag√©e avec la communaut√© ! üç≥",
          }),
        }
      );

      if (shareResponse.ok) {
        const shareData = await shareResponse.json();
        console.log("‚úÖ Recette partag√©e avec succ√®s !");
        console.log("üìù Message:", shareData.message);
        console.log(
          "üéØ La recette devrait maintenant appara√Ætre sur la page visiteur"
        );
      } else {
        console.log("‚ùå Erreur lors du partage:", shareResponse.status);
        const error = await shareResponse.text();
        console.log("   D√©tails:", error);
      }
    } else {
      console.log("‚ùå Erreur lors de la cr√©ation:", createResponse.status);
      const error = await createResponse.text();
      console.log("   D√©tails:", error);
    }
  } catch (error) {
    console.error("‚ùå Erreur:", error.message);
  }
}

// Ex√©cuter le script
createTestSharedRecipe();
